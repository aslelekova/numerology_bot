# services/question_service.py

async def generate_response(prompt: str, client) -> str:
    messages = [{"role": "user", "content": prompt}]
    response = await client.chat.completions.create(
        messages=messages,
        model="gpt-4o-2024-08-06"
    )
    return response.choices[0].message.content


async def generate_suggestions(user_question: str, client) -> str:
    suggestion_prompt = (
        f"–ü—Ä–µ–¥–ª–æ–∂–∏ —Ç—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞ (–ø—Ä–æ–Ω—É–º–µ—Ä—É–π –∏—Ö —Ç–∞–∫: üîÆ -), —Ä–∞–∑–¥–µ–ª—è–π –∏—Ö –∫–∞–∫ \\n, –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ "
        f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: '{user_question}'."
    )
    messages = [{"role": "user", "content": suggestion_prompt}]
    suggestion_response = await client.chat.completions.create(
        messages=messages,
        model="gpt-4o-2024-08-06"
    )
    return suggestion_response.choices[0].message.content
